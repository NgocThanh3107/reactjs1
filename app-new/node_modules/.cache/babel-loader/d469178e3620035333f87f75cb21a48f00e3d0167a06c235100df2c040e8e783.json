{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react.js\\\\app-new\\\\src\\\\Component\\\\blog\\\\Rate.js\",\n  _s = $RefreshSig$();\nimport StarRatings from 'react-star-ratings';\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Rate() {\n  _s();\n  let token = localStorage.getItem(\"token\");\n  let auth = localStorage.getItem(\"auth\");\n  auth = JSON.parse(auth);\n  let id_blog = localStorage.getItem(\"Id\");\n  const [rating, setRating] = useState(0);\n  function changeRating(newRating, name) {\n    setRating(newRating);\n    // - xu ly logic\n    let login = localStorage.getItem(\"checkLogin\");\n    if (login == null) {\n      alert(\"vui long dang nhap de danh gia\");\n    } else {\n      alert(\"ok\");\n      // - xu ly api\n      alert(\"ok\");\n      let config = {\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        }\n      };\n      const formData = new FormData();\n      formData.append('id_blog', id_blog);\n      formData.append('id_user', auth.id);\n      formData.append('rate', rating);\n      axios.post(\"http://localhost:8080/laravel8/laravel8/public/api/blog/comment/\" + id_blog, formData, config).then(res => {\n        if (res.data.errors) {\n          setErr(res.data.errors);\n        }\n        console.log(res);\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(StarRatings, {\n    rating: rating,\n    starRatedColor: \"blue\",\n    changeRating: changeRating,\n    numberOfStars: 6,\n    name: \"rating\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n}\n_s(Rate, \"z38YjvLLtbN6A1iRiKF1lIyGHjc=\");\n_c = Rate;\nexport default Rate;\nvar _c;\n$RefreshReg$(_c, \"Rate\");","map":{"version":3,"names":["StarRatings","useState","axios","jsxDEV","_jsxDEV","Rate","_s","token","localStorage","getItem","auth","JSON","parse","id_blog","rating","setRating","changeRating","newRating","name","login","alert","config","headers","formData","FormData","append","id","post","then","res","data","errors","setErr","console","log","starRatedColor","numberOfStars","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/react.js/app-new/src/Component/blog/Rate.js"],"sourcesContent":["import StarRatings from 'react-star-ratings';\r\nimport { useState } from \"react\"; \r\nimport axios from 'axios';\r\n\r\n\r\n    function Rate(){\r\n\r\n        let token = localStorage.getItem(\"token\");\r\n        let auth =  localStorage.getItem(\"auth\");\r\n            auth = JSON.parse(auth);\r\n        let id_blog = localStorage.getItem(\"Id\");\r\n\r\n        const [rating, setRating] = useState(0);\r\n\r\n        function changeRating( newRating, name ) {\r\n          setRating(newRating)\r\n          // - xu ly logic\r\n            let login = localStorage.getItem(\"checkLogin\");\r\n            if(login==null){\r\n                alert(\"vui long dang nhap de danh gia\") \r\n            }\r\n            else{\r\n                alert(\"ok\")\r\n                // - xu ly api\r\n                alert(\"ok\")\r\n                let config ={\r\n                    headers: {\r\n                        'Authorization': 'Bearer '+ token,\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                };\r\n\r\n                const formData = new FormData();\r\n                formData.append('id_blog', id_blog);\r\n                formData.append('id_user', auth.id);\r\n                formData.append('rate', rating);\r\n            \r\n                axios.post(\"http://localhost:8080/laravel8/laravel8/public/api/blog/comment/\" + id_blog, formData, config)\r\n                    .then((res) =>{\r\n                        if(res.data.errors){\r\n                            setErr(res.data.errors)\t\r\n                        }\r\n                        console.log(res)\r\n                    })\r\n            }\r\n        }\r\n\r\n        return (         \r\n          <StarRatings \r\n            rating={rating}\r\n            starRatedColor=\"blue\"\r\n            changeRating={changeRating}\r\n            numberOfStars={6}\r\n            name='rating'\r\n          /> \r\n        ); \r\n    }\r\n   export default Rate; "],"mappings":";;AAAA,OAAOA,WAAW,MAAM,oBAAoB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtB,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAEX,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACzC,IAAIC,IAAI,GAAIF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACpCC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;EAC3B,IAAIG,OAAO,GAAGL,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;EAExC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvC,SAASe,YAAYA,CAAEC,SAAS,EAAEC,IAAI,EAAG;IACvCH,SAAS,CAACE,SAAS,CAAC;IACpB;IACE,IAAIE,KAAK,GAAGX,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC9C,IAAGU,KAAK,IAAE,IAAI,EAAC;MACXC,KAAK,CAAC,gCAAgC,CAAC;IAC3C,CAAC,MACG;MACAA,KAAK,CAAC,IAAI,CAAC;MACX;MACAA,KAAK,CAAC,IAAI,CAAC;MACX,IAAIC,MAAM,GAAE;QACRC,OAAO,EAAE;UACL,eAAe,EAAE,SAAS,GAAEf,KAAK;UACjC,cAAc,EAAE,mCAAmC;UACnD,QAAQ,EAAE;QACd;MACJ,CAAC;MAED,MAAMgB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEZ,OAAO,CAAC;MACnCU,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEf,IAAI,CAACgB,EAAE,CAAC;MACnCH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,MAAM,CAAC;MAE/BZ,KAAK,CAACyB,IAAI,CAAC,kEAAkE,GAAGd,OAAO,EAAEU,QAAQ,EAAEF,MAAM,CAAC,CACrGO,IAAI,CAAEC,GAAG,IAAI;QACV,IAAGA,GAAG,CAACC,IAAI,CAACC,MAAM,EAAC;UACfC,MAAM,CAACH,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC;QAC3B;QACAE,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;MACpB,CAAC,CAAC;IACV;EACJ;EAEA,oBACEzB,OAAA,CAACJ,WAAW;IACVc,MAAM,EAAEA,MAAO;IACfqB,cAAc,EAAC,MAAM;IACrBnB,YAAY,EAAEA,YAAa;IAC3BoB,aAAa,EAAE,CAAE;IACjBlB,IAAI,EAAC;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAER;AAAClC,EAAA,CApDQD,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAqDd,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}